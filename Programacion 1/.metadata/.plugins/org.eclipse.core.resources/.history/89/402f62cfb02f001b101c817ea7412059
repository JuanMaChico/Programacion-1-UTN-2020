/*
 ===========================================+
 Name        : 2do-Parcial-Laboratorio-2.c  |
 Author      : Juan Manuel Chico            |
 Version     : controller.c					|
 Description : 2do Parcial Laboratorio 1	|
 ===========================================+
 */
#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Articulos.h"
#include "parser.h"
#include "utn.h"

/** \brief Carga los datos de los empleados desde el archivo data.csv (modo texto).
 *
 * \param path char*
 * \param pArrayListEmployee LinkedList*
 * \return int
 *
 */
int controller_loadFromText(char* path , LinkedList* pArrayListArticulo,int* lastID){

    FILE* f;
    int retorno=-1;
    f = fopen (path, "r");

    if(ll_len(pArrayListArticulo) == 0){
		if(f == NULL){
			printf("Error al abrir el archivo de texto, Corrobore si existe. \n\n");
			system("pause");
		}else{
			 retorno=0;
			 printf("Archivo abierto correctamente.\n\n");
			 retorno= parser_ArticuloFromText(f , pArrayListArticulo,lastID);
			 system("pause");
		}
    }else{
    	printf("El archivo ya fue cargado!.\n\n");
    	system("pause");
    }
    return retorno;
}

int controller_ListArticulo(LinkedList* pArrayListArticulo){
    int retorno=-1;
    int i,len;
    len=ll_len(pArrayListArticulo);
    if(pArrayListArticulo!=NULL && len>0)
    {
    	printf("+-----------------------------------------------------------------------------------------------------+\n");
    	printf("|%5s  %34s  %16s  %16s  %18s    | \n","ID","ARTICULO","PRECIO","MEDIDA","RUBRO ID");
    	printf("+-----------------------------------------------------------------------------------------------------+\n");
        for(i=0;i<len;i++)
        {
            Articulo_printArticulo(pArrayListArticulo,i);
            printf("+-----------------------------------------------------------------------------------------------------+\n");
            retorno=0;
        }
    }else{
    	printf("No hay datos a mostrar.\n");
    }
    return retorno;
}

int controller_sortArticulo(LinkedList* pArrayListEmployee){
	int len;
	len = ll_len(pArrayListEmployee);
	if (pArrayListEmployee!=NULL && len>0){

		ll_sort(pArrayListEmployee,articulo_OrdenaCadenaNombre,1);

		controller_ListArticulo(pArrayListEmployee);
		printf("Ordenado Correctamente.\n");
		system("pause");
	} else {
		printf(" \n No hay datos a Mostrar \n");
		system("pause");
	}
	return 1;
}

int controller_saveAsText(char* path , LinkedList* pArrayListArticulos)
{
    FILE* f;

    eArticulo* articuloAux;

	int id;
	char articulo[100];
	float precio;
	char medida[100];
	int rubroId;
	int len;
	int retorno=-1;

    f= fopen(path, "w");
    if(f != NULL && ll_len(pArrayListArticulos)>0)
    {
        len=ll_len(pArrayListArticulos);
        fprintf(f,"id,articulo,precio,medida,rubro\n");
        for(int i=0; i<len; i++)
        {
        	articuloAux=(eArticulo*)ll_get(pArrayListArticulos,i);

            articulo_getId(articuloAux,&id);

            articulo_getArticulo(articuloAux,articulo);

            articulo_getMedida(articuloAux,medida);

            articulo_getPrecio(articuloAux,&precio);

            articulo_getRubroId(articuloAux,&rubroId);

            fprintf(f,"%d,%s,%f,%s,%d\n",id,articulo,precio,medida,rubroId);
        }
        printf(" \nArchivo guardado correctamente.\n\n");
        system("pause");
        retorno=0;
    }
    else
    {
        printf(" \nNo se pudo guardar el archivo\n");
        retorno=0;
    }
    fclose(f);
    return retorno;
}


int calculaDescuento (void* pElemento){
	int retorno=-1;
	if(pElemento != NULL){
		eArticulo* articuloAux = (eArticulo*) pElemento;
		int rubroId;
		float precio;
		articulo_getRubroId(articuloAux,&rubroId);
		articulo_getPrecio(articuloAux,&precio);
		if(rubroId == 1 && precio >= 120){
			precio = precio * 0.8;
			articulo_setprecio(articuloAux, precio);
			retorno=1;
		}else if (rubroId == 2 && precio <= 200){
			precio = precio * 0.9;
			articulo_setprecio(articuloAux, precio);
			retorno=1;
		}
	}else{
		printf("\n..404..\n");
	}
	return retorno;
}

int controller_MapearArticulo(LinkedList* pArrayListEmployee){
	int len;
	len = ll_len(pArrayListEmployee);
	if (pArrayListEmployee!=NULL && len>0){

		ll_map(pArrayListEmployee,calculaDescuento);

		printf("Calculado Correctamente.\n");
		controller_ListArticulo(pArrayListEmployee);
		system("pause");
	} else {
		printf(" \n No hay datos a Calcular \n");
		system("pause");
	}
	return 1;
}

int controller_conterPorPrecio (LinkedList* pArrayListEmployee){
	int retorno=-1;
	int len;
	int cantidad;
	len=ll_len(pArrayListEmployee);
	if(pArrayListEmployee != NULL && len>0){
		cantidad=ll_count(pArrayListEmployee, articulos_countPrecio);
		if(cantidad>0){
			printf("+----------------------------------------------+----+\n");
			printf("| Cantidad de Articulos C/ Precio mayor a $100 | %d |\n",cantidad);
			printf("+----------------------------------------------+----+\n");
		}
	}
	return retorno;
}
int controller_conterPorRubro(LinkedList* pArrayListEmployee){
	int retorno=-1;
	int len;
	int cantidad;
	len=ll_len(pArrayListEmployee);
	if(pArrayListEmployee!=NULL && len > 0){
		cantidad=ll_count(pArrayListEmployee,articulos_countXrubro);
		if(cantidad > 0){
			printf("+-----------------------------------------------+----+\n");
			printf("| Cantidad de Articulos Rubro - Cuidado De Ropa | %d |\n",cantidad);
			printf("+-----------------------------------------------+----+\n");
		}
	}
	return retorno;
}





